	
	※ Git

	1.	대표적인 형상관리도구
		소스코드의 유지, 버전 관리
	2.	로컬 PC에 '로컬저장소(local repository)'를 만든다.
		(디렉터리를 만든다)
	3.	'로컬저장소'에 관리할 파일을 만든다.
	4.	관리할 파일을 추적한다. (stage에 올린다 : staging)
	5.	추적이 시작된 파일은 수정된 내용이 Git에 의해 관리된다.
	6.	추적된 내용은 사용자가 저장을 해준다. (commit)
	7.	commit이 완료된 상태에서 '원격 저장소(remote repository)'에 올린다.
	
	git command - git 관련 명령은 git으로 시작한다.

	Untracked files : ## 추적하지 않는 파일이 있다.
	git status : 로컬저장소 상태확인
	git rm --cached : staging 취소 (git add 취소)
	git commit
	git commit -m '내용' : ##커밋메시지를 작성하면서 커밋한다.(추천)
	git log : 커밋 내역 확인하기
	##HEAD : 직전 commit을 의미
	##git log --oneline 명령으로 간단히 살펴볼 수 있다.
	
	commit이 완료되면 '로컬저장소'는 현재 상태로 저장된다.
	commit이 되지 않으면 '원격저장소'와 내용을 주고받을 수 없다.

	git commit -am '커밋메시지' 명령으로 add와 commit을 동시에 할 수 있다.
	최초 commit은 반드시 git add와 git commit을 따로 명령내려야 한다.
	
	vim editor
	## i	: 삽입모드 (이제 입력할 수 있다.)
	## esc	: 해당 모드의 종료
	## :wq	: 저장하고 vim 종료
	
	
	## 원격저장소 만들기
	## 1. 저장소 이름 : local (로컬저장소 이름과 통일할 것)
	## 2. README.md 파일 만들기
	## 3. .gitignore 파일 (가급적) 만들기
	## 4. gitigonore.io 사이트에서 생성
	
	## 원격저장소 주소 알아내기
	## 1. local 레파지토리 열면 녹색 code 버튼 있음
	## 2. 클릭하면 주소 보임
	
	GDJ45@DESKTOP-DSKRUVS MINGW64 ~/local (master)
	$ git remote add origin https://gitgub.com/nykim12/local.git	## 원격저장소 등록
	
	## 현재 상황
	## 로컬저장소	원격저장소
	## a.txt	README.md
	## 			.gitignore
	
	## 중요한 용어
	## 1. push : 로컬저장소 -> 원격저장소
	## 2. pull : 로컬저장소 <- 원격저장소
	
	## 가장 먼저 해야할 일
	## pull을 먼저 해야 한다.
	## 원격저장소의 main 브랜치의 pull을 한다.
	
	## push, pull을 위해 미리 github.com에서 personal access token을 받아둔다.
	## 외울 수 없으므로 별도로 저장 필수
	
	linux command

	1)	pwd 	: 현재 디렉터리 경로 확인 명령어
	2)	ls		: 현재 디렉터리에 포함된 파일 및 디렉터리 확인
	3)	mkdir	: 디렉터리 만들기
	4)	cd		: 디렉터리 이동
		(1) ~  : 루트 디렉터리
		(2) .  : 현재 디렉터리
		(3) .. : 상위 디렉터리
		(4) /  : 디렉터리 구분자
	5)	rmdir	: 디렉터리 삭제
	6)	touch	: 파일 만들기
		(1) echo : 데이터 보내기
		(2) cat	 : 파일 열기
	7)	rm		: 파일 삭제